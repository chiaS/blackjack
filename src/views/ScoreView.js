// Generated by CoffeeScript 1.8.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.ScoreView = (function(_super) {
  __extends(ScoreView, _super);

  function ScoreView() {
    return ScoreView.__super__.constructor.apply(this, arguments);
  }

  ScoreView.prototype.template = _.template('<h2>Result</h2><div class="result"></div>');

  ScoreView.prototype.initialize = function() {
    this.render();
    return this.listenTo(this.model.get('dealerHand'), 'reveal:dealer', this.findResult);
  };

  ScoreView.prototype.render = function() {
    this.$el.children().detach();
    this.$el.html(this.template);
    return this.$('.result').text(this.score);
  };

  ScoreView.prototype.findResult = function() {
    var dealerScore, playerScore;
    $(".hit-button, .stand-button").attr('disabled', true);
    playerScore = this.model.get("playerHand").finalScore();
    dealerScore = this.model.get("dealerHand").finalScore();
    console.log('dealer:' + dealerScore + ' vs player: ' + playerScore);
    if (dealerScore === 21 || playerScore > 21 || (dealerScore < 22 && dealerScore > playerScore)) {
      this.score = 'You Lost';
    } else {
      this.score = 'You Won';
    }
    if (playerScore === dealerScore) {
      this.score = 'PUSH';
    }
    return this.render();
  };

  ScoreView.prototype.earlyResult = function() {
    var playerScore;
    $(".hit-button, .stand-button").attr('disabled', true);
    playerScore = this.model.get("playerHand").finalScore();
    if (playerScore > 21) {
      this.score = 'You Lost';
    }
    if (playerScore === 21) {
      this.score = 'You Won';
    }
    return this.render();
  };

  return ScoreView;

})(Backbone.View);
